language: cpp

compiler:
  - clang
  - gcc

before_install:
  - if [ "$CXX" = "g++" ]; then sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y; fi
  - sudo apt-get update
  - sudo apt-get install tcl tcl-dev
  - if [ "$CXX" = "g++" ]; then sudo apt-get install libcppunit-dev libcppunit-1.12-1; fi
  - if [ "$CXX" = "g++" ]; then sudo apt-get install python-yaml python-pip; fi
  - if [ "$CXX" = "g++" ]; then sudo pip install cpp-coveralls; fi
  - if [ "$CXX" = "g++" ]; then sudo apt-get install gcc-4.8 g++-4.8; fi
  - if [ "$CXX" = "g++" ]; then export CXX="g++-4.8" CC="gcc-4.8"; fi
  - if [ "$CXX" = "clang++" ]; then sudo apt-get install clang-3.4; fi
  - if [ "$CXX" = "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx; fi
  - if [ "$CXX" = "clang++" ]; then (cd libcxx/lib && bash buildit); fi
  - if [ "$CXX" = "clang++" ]; then sudo cp libcxx/lib/libc++.so.1.0 /usr/lib/; fi
  - if [ "$CXX" = "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
  - if [ "$CXX" = "clang++" ]; then sudo cp -r libcxx/include/* /usr/include/c++/v1/; fi
  - if [ "$CXX" = "clang++" ]; then sudo ln -sf libc++.so.1.0 /usr/lib/libc++.so; fi
  - if [ "$CXX" = "clang++" ]; then sudo ln -sf libc++.so.1.0 /usr/lib/libc++.so.1; fi
  - if [ "$CXX" = "clang++" ]; then export CXXFLAGS="-stdlib=libc++"; fi
  - if [ "$CXX" = "clang++" ]; then (wget http://downloads.sourceforge.net/project/cppunit/cppunit/1.12.1/cppunit-1.12.1.tar.gz && tar -zxvf cppunit-1.12.1.tar.gz && cd cppunit-1.12.1 && ./configure --disable-doc --disable-doxygen --disable-html-docs && make -j2 && sudo make install); fi
  - export CPPFLAGS="-D_FORTIFY_SOURCE=2"

# Skip install
install: true

script:
  - if [ "${COVERITY_SCAN_BRANCH}" != "1" ]; then ./configure --enable-debug; fi
  - if [ "${COVERITY_SCAN_BRANCH}" != "1" ]; then make -j2 V=1; fi
  - if [ "${COVERITY_SCAN_BRANCH}" != "1" ]; then make -j2 check V=1; fi

after_success:
  - if [ "$CXX" = "g++-4.8" ]; then coveralls --gcov gcov-4.8 -r . -b . -e misc -e src/tests -e src/misc -e src/indices.h -e src/config.h -e src/config-sanity.h -e src/bits.h -e src/bdlib.h -t ${COVERALLS_REPO_TOKEN}; fi

# Coverity configuration
env:
  global:
    # COVERITY_SCAN_TOKEN
    - secure: WG6t7cnbz7SJSNw4e6EOZ2A5dcLhDdCPELxzK/lODYpLkcXZ/LIB9KDMu+cnXAEz5zdu5azF6sMhH6fdhTs3SHB5hQProCVb3S06Z1JqXyGqOl6D7k8MGsylsQw3vy3jrGXp5Wk+6PTyMIcWRFfZk3UQpLTidiWyhJjw9F9/Nh8=
    # COVERALLS_REPO_TOKEN
    - secure: KgQ7VU2jCA3emWAQNQpk3r1wwCLx40tAs5DG9EzVD+kSgLvxdYH/mRuvKxHC2vxXDruyQe5iTLUglYjFoRCN7bxMbNIQEhn4ax4WCKe1r7gFqbNZb0r8rzlHPXq47BGc3b9NxacaAg8ZqJOdfqA+lkQTsX7W3jeD3Wa17HaVzVQ=

addons:
  coverity_scan:
    project:
      name: "bdrewery/bdlib"
      description: "Build submitted via Travis CI"
    notification_email: bryan-coverity@shatow.net
    build_command_prepend: "cov-configure --comptype g++ --compiler ${CXX}; ./configure --enable-debug"
    build_command: "make -j2"
    branch_pattern: coverity_scan
